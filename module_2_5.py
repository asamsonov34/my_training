# Опять решил слегка поэкспериментировать. Как говорится,
#
#           Проведём эксперимент:
#           Чем же пахнет экскремент?

import random # Так интереснее :)

def get_matrix(lines, cols, val):
    mtx = []
    for i in range(lines):
        line_lst = []
        for j in range(cols):
            line_lst.append(val)
        mtx.append(line_lst)
    return mtx

# Добавим гену псевдослучайных чиселок от min до max:
def rand_n(min, max):
#   n = random.randrange(min, max)
#   return n
    # А попробуем-ка строку генерации сразу передать в return,
    # не задействуя переменную:
    return random.randrange(min, max)
    # М-м-м, работает. Интересно, есть ли тут преимущество по
    # сравнению с использованием переменной, как в закомменченом
    # куске — ну, использование памяти и всё такое...

# Ну, тогда и переменные результатов не будет делать,
# а сразу в вызовы print() засунем по экземпляру get_matrix
# с разными значениями для строк и колонок, а также пределов
# min и max для rand_n:
print(get_matrix(2, 2, rand_n(0, 11)))
print(get_matrix(3, 5, rand_n(11, 51)))
print(get_matrix(4, 2, rand_n(51, 101)))
# чтобы диапазоны генерации value для трёх выводов продолжали
# друг друга, не перекрываясь. Нахрена, а главное, зачем —
# да просто так.